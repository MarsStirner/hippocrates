#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:new_style,utf8strings
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

import TFOMSService
from ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '   getAvailableAccounts()'
  print '  Account getAccount(int accountId)'
  print '  AccountInfo getAccountItems(int accountId)'
  print '  void setDoNotUploadAnymoreMarks( items)'
  print '  bool deleteAccount(int accountId)'
  print '  XMLRegisters getXMLRegisters(int contractId, timestamp beginDate, timestamp endDate, string infisCode, string obsoleteInfisCode, string smoNumber,  orgStructureIdList,  patientOptionalFields,  personOptionalFields,  sluchOptionalFields, bool primaryAccount, string levelMO)'
  print '   getOrgStructures(string organisationInfis)'
  print '   getAvailableContracts(string organisationInfis)'
  print '  int changeClientPolicy(int patientId, TClientPolicy newPolicy)'
  print '   loadTfomsPayments(string fileName,  payments, int refusedAmount, int payedAmount, double payedSum, double refusedSum, string accountNumber, string comment)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = TFOMSService.Client(protocol)
transport.open()

if cmd == 'getAvailableAccounts':
  if len(args) != 0:
    print 'getAvailableAccounts requires 0 args'
    sys.exit(1)
  pp.pprint(client.getAvailableAccounts())

elif cmd == 'getAccount':
  if len(args) != 1:
    print 'getAccount requires 1 args'
    sys.exit(1)
  pp.pprint(client.getAccount(eval(args[0]),))

elif cmd == 'getAccountItems':
  if len(args) != 1:
    print 'getAccountItems requires 1 args'
    sys.exit(1)
  pp.pprint(client.getAccountItems(eval(args[0]),))

elif cmd == 'setDoNotUploadAnymoreMarks':
  if len(args) != 1:
    print 'setDoNotUploadAnymoreMarks requires 1 args'
    sys.exit(1)
  pp.pprint(client.setDoNotUploadAnymoreMarks(eval(args[0]),))

elif cmd == 'deleteAccount':
  if len(args) != 1:
    print 'deleteAccount requires 1 args'
    sys.exit(1)
  pp.pprint(client.deleteAccount(eval(args[0]),))

elif cmd == 'getXMLRegisters':
  if len(args) != 12:
    print 'getXMLRegisters requires 12 args'
    sys.exit(1)
  pp.pprint(client.getXMLRegisters(eval(args[0]),eval(args[1]),eval(args[2]),args[3],args[4],args[5],eval(args[6]),eval(args[7]),eval(args[8]),eval(args[9]),eval(args[10]),args[11],))

elif cmd == 'getOrgStructures':
  if len(args) != 1:
    print 'getOrgStructures requires 1 args'
    sys.exit(1)
  pp.pprint(client.getOrgStructures(args[0],))

elif cmd == 'getAvailableContracts':
  if len(args) != 1:
    print 'getAvailableContracts requires 1 args'
    sys.exit(1)
  pp.pprint(client.getAvailableContracts(args[0],))

elif cmd == 'changeClientPolicy':
  if len(args) != 2:
    print 'changeClientPolicy requires 2 args'
    sys.exit(1)
  pp.pprint(client.changeClientPolicy(eval(args[0]),eval(args[1]),))

elif cmd == 'loadTfomsPayments':
  if len(args) != 8:
    print 'loadTfomsPayments requires 8 args'
    sys.exit(1)
  pp.pprint(client.loadTfomsPayments(args[0],eval(args[1]),eval(args[2]),eval(args[3]),eval(args[4]),eval(args[5]),args[6],args[7],))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
